/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AdministrativeRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Employee.OrphanageEmployee;
import Business.Enterprise.Enterprise;
import Business.Organization.CaretakerOrganization;
import Business.Organization.Organization;
import Business.Role.CaretakerRole;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.ChangeEnterpriseRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.UserRole.UserWorkArea;

/**
 *
 * @author bhash
 */
public class EmployeeMangement extends javax.swing.JPanel {

    /**
     * Creates new form EmployeeMangement
     */
    private JPanel panelRight;
       private UserAccount userAccount;
    private Organization organization;
     private Enterprise enterprise;
     private EcoSystem system;
    public EmployeeMangement(JPanel container, UserAccount userAccount, Organization organization, Enterprise enterprise,EcoSystem system) {
          
        this.panelRight=container;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
      initComponents();
       populateTable();
       populateRequestofEmployeeTransfered();
     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        employeeRecievedFromAdminFromDiffEnterpriseTAble = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        addNewEmployee = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        employeeDetails = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(250, 150, 146));

        employeeRecievedFromAdminFromDiffEnterpriseTAble.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Request Message", "Waiting/Accepted"
            }
        ));
        jScrollPane1.setViewportView(employeeRecievedFromAdminFromDiffEnterpriseTAble);

        jButton2.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton2.setText("Employee Transfer");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        addNewEmployee.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        addNewEmployee.setText("Add New Employee");
        addNewEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewEmployeeActionPerformed(evt);
            }
        });

        employeeDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Assigned Children"
            }
        ));
        jScrollPane2.setViewportView(employeeDetails);

        jButton3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton3.setText("Accept");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel1.setText("List of Employee");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jLabel3.setText("List of request from differnt Admin");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(addNewEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 1025, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(954, 954, 954)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(91, 91, 91)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addNewEmployee)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jButton3)
                .addGap(97, 97, 97))
        );
    }// </editor-fold>//GEN-END:initComponents
 public void populateTable()
 {
     
        DefaultTableModel dtm = (DefaultTableModel)employeeDetails.getModel();
     // DefaultTableModel dtm = (DefaultTableModel)flightsTable.getModel();
        dtm.setRowCount(0);
        Organization employeeOrganization = null;
        
         
        for(Organization org:enterprise.getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof CaretakerOrganization)
            {
                employeeOrganization = org;
            }
        }
       
       for (Employee emp : employeeOrganization.getEmployeeDirectory().getEmployeeList())
        {
            OrphanageEmployee employee = (OrphanageEmployee)emp;
            Object[] row = new Object[2];
            row[0] = employee;
           
            row[1]= employee.getChildrenAssignedCount();
            dtm.addRow(row);
        }
           
            
 
 }
 private void populateRequestofEmployeeTransfered()
 {
       DefaultTableModel model = (DefaultTableModel) employeeRecievedFromAdminFromDiffEnterpriseTAble.getModel();
        model.setRowCount(0);
        for (WorkRequest request : enterprise.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[3];
            row[0] = request;
            row[1] = request.getMessage();
            String result = ((ChangeEnterpriseRequest) request).getTestResult();
            row[2] = result == null ? "Waiting" : result;
           // row[3] = request.getDonatedAmt();
            model.addRow(row);      
}    
 }
    private void addNewEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewEmployeeActionPerformed
         CardLayout layout = (CardLayout)panelRight.getLayout();
        panelRight.add(new AddEmployee(panelRight,userAccount,organization,enterprise,system));
        layout.next(panelRight);      
    }//GEN-LAST:event_addNewEmployeeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
       int row = employeeDetails.getSelectedRow();
 if(row<0){
    JOptionPane.showMessageDialog(this, "Please select a row");
    }
 else{
     Employee emp = (Employee)employeeDetails.getValueAt(row, 0);
     panelRight.add(new TransferEmployee(panelRight,emp,organization,system,enterprise,userAccount));
     CardLayout layout = (CardLayout)panelRight.getLayout();
     layout.next(panelRight);
 }     
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
 int selectedRow =employeeRecievedFromAdminFromDiffEnterpriseTAble.getSelectedRow();
          if (selectedRow < 0){
              JOptionPane.showMessageDialog(null, "Please select row");
        }
          else
          {
          
             ChangeEnterpriseRequest acceptRequest = (ChangeEnterpriseRequest) employeeRecievedFromAdminFromDiffEnterpriseTAble.getValueAt(selectedRow, 0);
       
            acceptRequest.setTestResult("Confirmed");
           
             acceptRequest.setStatus("Accepted");
             UserAccount ua = acceptRequest.getSender();
             Organization employeeOrganization = null;
              for(Organization org:enterprise.getOrganizationDirectory().getOrganizationList())
        {
            if(org instanceof CaretakerOrganization)
            {
                employeeOrganization = org;
            }
        }
          
            employeeOrganization.getEmployeeDirectory().addEmployee(ua.getEmployee());
        
                UserAccount userNew = employeeOrganization.getUserAccountDirectory().createUserAccount(ua.getUsername(), new String(ua.getPassword()), ua.getEmployee(), new CaretakerRole());
        
        
        populateRequestofEmployeeTransfered();
        populateTable();
          }
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addNewEmployee;
    private javax.swing.JTable employeeDetails;
    private javax.swing.JTable employeeRecievedFromAdminFromDiffEnterpriseTAble;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
